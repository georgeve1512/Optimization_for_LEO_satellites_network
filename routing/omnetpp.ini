[General]
rng-class = omnetpp::cMersenneTwister
simtime-resolution = ns
sim-time-limit=600.15s
#record-eventlog = true
##############################################
#		GUI 
##############################################
num-rngs = 1
seed-set = ${seed = 1}#${seed = 1..2}
###############################
#		Routing module
###############################
**.alpha = ${alpha=5}
**.m_var = ${mVar=5}
**.changeRate = 25s				
###############################
#		App module
###############################
**.terminal[*].app.packetLength = 1500 bytes
**.terminal[*].app.sendIaTime = exponential(150ms) 							#1.5ms is worst case
**.terminal[*].app.burst_next_event = exponential(25s)						# exponential(120s)#(135 ms,10ms) #1.5ms is worst case
**.terminal[*].app.burst_next_interval = exponential(40ms)					#(135 ms,10ms) #1.5ms is worst case 
**.terminal[*].app.burst_size = intuniform (80,320)							#(135 ms,10ms) #1.5ms is worst case
###############################
#		Queue module
###############################
**.rte[*].frameCapacity = 7000
**.datarate =  5Mbps#2Gbps#
**.load_balance_mode = ${LB=true}
**.load_balance_link_prediction = ${LinkPre=true,false}
**.load_threshold = 85  												#1200 messages 
**.rte[*].throughput.result-recording-modes = all,-vector,+histogram
output-scalar-file = ${resultdir}/${configname}-${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}-${iterationvars}-${repetition}.vec

**.rte[*].app.hopCount.result-recording-modes = all,-vector,+histogram
**.rte[*].appType = "App"

######################################################################################################################

#										WORKING ZONE - Simulation of K satellites

###################################################################################################################### 
[Config NetK] 
network = networks.NetK
**.num_of_hosts = 25
**.num_of_terminals = 2
*.rte[*].app.hasApp = false
*.terminal[*].radius = 1500m
*.terminal[*].frac = 0.8
*.rte[*].maxTerminalNumber = 10 		#Maximum number of terminals connected at once to a satellite
*.rte[*].maxHopCountForTerminalList = 2

###################################################
#		Mobility Settings - Constraints
###################################################
**.maxX = 10000m
**.maxY = 10000m
**.minX = 0m
**.minY = 0m

###################################################
#		Mobility Settings - Satellites
###################################################
*.rte[*].mobility.typename = "TurtleMobility"
*.rte[*].mobilityType = "TurtleMobility"

## Generated by [buildXMLFiles.py]
*.rte[0].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='0']")
*.rte[1].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='1']")
*.rte[2].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='2']")
*.rte[3].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='3']")
*.rte[4].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='4']")
*.rte[5].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='5']")
*.rte[6].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='6']")
*.rte[7].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='7']")
*.rte[8].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='8']")
*.rte[9].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='9']")
*.rte[10].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='10']")
*.rte[11].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='11']")
*.rte[12].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='12']")
*.rte[13].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='13']")
*.rte[14].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='14']")
*.rte[15].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='15']")
*.rte[16].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='16']")
*.rte[17].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='17']")
*.rte[18].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='18']")
*.rte[19].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='19']")
*.rte[20].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='20']")
*.rte[21].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='21']")
*.rte[22].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='22']")
*.rte[23].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='23']")
*.rte[24].mobility.turtleScript = xmldoc("mobility.xml", "movements//movement[@id='24']")

###################################################
#		Mobility Settings - Terminals
###################################################
*.terminal[*].mobility.typename = "StationaryMobility"
*.terminal[*].mobilityType = "StationaryMobility"
